/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo.plannerInterface;

import deposito.*;
import java.awt.Color;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cosimocorbisiero
 */
public class MaintainerAvailInterface extends javax.swing.JFrame {

    /**
     * Creates new form MaintainerAvailInterface
     */
    
    Planner planner;
    InterfaceActivity attivita;
    ArrayList<Maintainer> archivioMaintainer;
    public MaintainerAvailInterface() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.getContentPane().setBackground(Color.orange);
        
        
    }

    MaintainerAvailInterface(JFrame parent, Planner planner, InterfaceActivity attivita) {
        this();
        this.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
                
            }

            @Override
            public void windowClosing(WindowEvent e) {
                
            }

            @Override
            public void windowClosed(WindowEvent e) {
                parent.dispatchEvent(new WindowEvent(parent,WindowEvent.WINDOW_CLOSING));
            }

            @Override
            public void windowIconified(WindowEvent e) {
                
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                
            }

            @Override
            public void windowActivated(WindowEvent e) {
                
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
                
            }
        });
        this.planner=planner;
        this.attivita=attivita;
        this.archivioMaintainer=this.planner.viewMaintainer();
        this.tableAvail.setSelectionMode(0);
        this.insertData(this.attivita);
        this.refreshTable();
 
        
        
    }
    private void refreshTable(){

        Set<Procedure> a = new HashSet<>();
        a.add(new Procedure("smp","nomefile"));
        
        if(this.archivioMaintainer.isEmpty()){
            JOptionPane.showMessageDialog(new JFrame(), "Non sono presenti manutentori");
            this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
            this.setVisible(false);
        }else{
        this.setVisible(true);
        DefaultTableModel model = (DefaultTableModel)this.tableAvail.getModel();
        ArrayList<Integer> perc = new ArrayList<>();
        for(Maintainer man : this.archivioMaintainer){
           
            man.setProcedure(a);
            ArrayList<Integer> percentuali=this.planner.maintainerAvalPerc(man);
            
            if(percentuali == null){
                JOptionPane.showMessageDialog(new JFrame(), "Errore nella disponibilità percentuale");
                this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
            }

            String skill = this.skill(man, attivita);
            perc.clear();
            for(int i =0;i<percentuali.size();i++){
                
                perc.add(percentuali.get(i));     
            }
            model.insertRow(model.getRowCount(),new Object[]{man.getNome(),skill,perc.get(0),perc.get(1),perc.get(2),perc.get(3),perc.get(4)});
        }
        this.tableAvail.setModel(model);   
    }
    }
    
    private String skill(Maintainer man,InterfaceActivity act){
        //System.out.println(man.toString());
        Set<String> set = man.getSkill();
        int j = 0;
        List<String> list = this.attivita.getCompetenze();
        if(set == null || list == null){
            JOptionPane.showMessageDialog(new JFrame(), "Errore Set o Skill sono null");
            this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
        }              
          for(String s : list){
              
               if(set.remove(s)){
                   j++;
               }
           }
       
       return ""+j+"/"+list.size()+"";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        panelActivity = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelWeek = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaSkill = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableAvail = new javax.swing.JTable();
        btnSelezione = new javax.swing.JButton();
        btnCancella = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelActivity.setEditable(false);
        jScrollPane2.setViewportView(panelActivity);

        jLabel1.setText("WEEK nº");

        panelWeek.setEditable(false);
        jScrollPane1.setViewportView(panelWeek);

        jLabel2.setText("Activity to Assign");

        areaSkill.setEditable(false);
        areaSkill.setColumns(20);
        areaSkill.setRows(5);
        jScrollPane3.setViewportView(areaSkill);

        jLabel3.setText("SKILL NEEDED");

        tableAvail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Maintainer", "Skills", "Avail Mon", "Avail Tue", "Avail Wed", "Avail Thu", "Avail Fri"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAvail.setCellSelectionEnabled(true);
        tableAvail.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tableAvail);
        tableAvail.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnSelezione.setText("Seleziona");
        btnSelezione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelezioneActionPerformed(evt);
            }
        });

        btnCancella.setText("Cancella");
        btnCancella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancellaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelezione, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancella, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelezione, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancella, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelezioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelezioneActionPerformed
        
        
        if(this.tableAvail.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(new JFrame(), "ERRORE SELEZIONA QUALCOSA");
            return;
        }
        
        Maintainer man = this.archivioMaintainer.get(this.tableAvail.getSelectedRow());
        int giorno = this.tableAvail.getSelectedColumn();
        if(giorno<2){
            JOptionPane.showMessageDialog(new JFrame(), "ERRORE SELEZIONA UN GIORNO CORRETTO");
            return;
            
        }
        if(this.attivita instanceof EwoActivity && giorno!=this.currentDay()){
            JOptionPane.showMessageDialog(new JFrame(), "EWO ASSEGNABILE SOLO OGGI!!!");
            return;
        }
        int index = this.tableAvail.getSelectedRow();
        
        MaintainerChooseDayInterface fr = new MaintainerChooseDayInterface(this,this.planner,this.attivita,man,giorno-1);
        fr.setVisible(true);
        this.setVisible(false);
        
        
        
    }//GEN-LAST:event_btnSelezioneActionPerformed

    private void btnCancellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancellaActionPerformed
       this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_btnCancellaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void insertData(InterfaceActivity act){
        this.panelWeek.setText(Integer.toString(this.currentWeek()));
        String stringa = Integer.toString(act.getId())+" - "+act.getSito().getOffice()+" "+act.getSito().getArea()+" - "+ act.getTipologia()+ " - "+Integer.toString(act.getTempo())+"'";
        this.panelActivity.setText(stringa);
        List<String> a = act.getCompetenze();
        //System.out.println(a.toString());
        for(String s : a){
            this.areaSkill.setText(s);
        }
    }
    private int currentWeek(){
        Calendar c =Calendar.getInstance();
        Date date = new Date();
        c.setTime(date);
        return c.get(Calendar.WEEK_OF_YEAR);
    }
    private int currentDay(){
        Calendar c = Calendar.getInstance();
        Date d = new Date();
        c.setTime(d);
        return c.get(Calendar.DAY_OF_WEEK);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaintainerAvailInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaintainerAvailInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaintainerAvailInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaintainerAvailInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaintainerAvailInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaSkill;
    private javax.swing.JButton btnCancella;
    private javax.swing.JButton btnSelezione;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane panelActivity;
    private javax.swing.JTextPane panelWeek;
    private javax.swing.JTable tableAvail;
    // End of variables declaration//GEN-END:variables
}
